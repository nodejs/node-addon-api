name: Node.js CI Unix Platform

on: [push, pull_request]

jobs:
  test:
    timeout-minutes: 45
    strategy:
      matrix:
        node-version:
          - node/12
          - node/14
          - node/16
        compiler:
          - gcc
          - clang
        os:
          - ubuntu-18.04
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v2
    - name: Install system dependencies
      run: |
        if [ "${{ matrix.compiler }}" = "gcc" -a "${{ matrix.os }}" = ubuntu-* ]; then
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt-get update
          sudo apt-get install g++-6.5
        fi
    - name: Use Node.js ${{ matrix.node-version }}
      run: |
        git clone --branch v1.4.2 --depth 1 https://github.com/jasongin/nvs ~/.nvs
        . ~/.nvs/nvs.sh
        nvs --version
        nvs add ${{ matrix.node-version }}
        nvs use ${{ matrix.node-version }}
        node --version
        npm --version
        npm install
    - name: npm test
      run: |
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          export CC="gcc" CXX="g++"
        fi
        if [ "${{ matrix.compiler }}" = "gcc" -a "${{ matrix.os }}" = ubuntu-* ]; then
          export CC="gcc-6.5" CXX="g++-6.5" AR="gcc-ar-6.5" RANLIB="gcc-ranlib-6.5" NM="gcc-nm-6.5"
        fi
        if [ "${{ matrix.compiler }}" = "clang" ]; then
          export CC="clang" CXX="clang++"
        fi
        export CFLAGS="$CFLAGS -O3 --coverage" LDFLAGS="$LDFLAGS --coverage"
        echo "CFLAGS=\"$CFLAGS\" LDFLAGS=\"$LDFLAGS\""
        npm run pretest -- --verbose
        node test
