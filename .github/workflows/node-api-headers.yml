name: Node.js CI with node-api-headers

on: [push, pull_request]

env:
  PYTHON_VERSION: '3.11'

permissions:
  contents: read

jobs:
  test:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        api_version:
          - '9'
        node-version:
          - 22.x
        node-api-headers-version:
          - '1.1.0'
          - '1.2.0'
          - '1.3.0'
        os:
          - ubuntu-latest
        compiler:
          - gcc
          - clang
    runs-on: ${{ matrix.os }}
    steps:
    - name: Harden Runner
      uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481 # v2.11.0
      with:
        egress-policy: audit

    - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@42375524e23c412d93fb67b49958b491fce71c38  # v5.4.0
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@cdca7365b2dadb8aad0a33bc7601856ffabcc48e # v4.3.0
      with:
        node-version: ${{ matrix.node-version }}
    - name: Check Node.js installation
      run: |
        node --version
        npm --version
    - name: Install dependencies
      run: |
        npm install
        npm install "node-api-headers@${{ matrix.node-api-headers-version }}"
    - name: npm test
      run: |
        export NAPI_VERSION=${{ matrix.api_version }}
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          export CC="gcc" CXX="g++"
        fi
        if [ "${{ matrix.compiler }}" = "clang" ]; then
          export CC="clang" CXX="clang++"
        fi
        echo "CC=\"$CC\" CXX=\"$CXX\""
        echo "$CC --version"
        $CC --version
        echo "$CXX --version"
        $CXX --version
        export CFLAGS="$CFLAGS -O3 --coverage" LDFLAGS="$LDFLAGS --coverage"
        export use_node_api_headers=true
        echo "CFLAGS=\"$CFLAGS\" LDFLAGS=\"$LDFLAGS\""
        npm run pretest -- --verbose
